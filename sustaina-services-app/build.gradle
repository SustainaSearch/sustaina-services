apply plugin: 'play'
apply plugin: 'scala'

dependencies {
    compile project(':sustaina-services-catalog:sustaina-services-catalog-core')
    compile project(':sustaina-services-api-model')
//    compile(project(':sustaina-services-catalog:sustaina-services-product-categories-solr-client')) {
//        // Required for Swagger UI to work - does it affect Solr?
//        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
//        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
//    }
    compile(project(':sustaina-services-catalog:sustaina-services-product-categories-dynamodb'))
    compile(project(':sustaina-services-catalog:sustaina-services-products-solr-client')) {
        // Required for Swagger UI to work - does it affect Solr?
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
    }
    compile(project(':sustaina-services-api-model'))

    compile "com.typesafe.play:play-cache_$scalaPlatform:$playVersion"
    compile "com.typesafe.play:play-guice_$scalaPlatform:$playVersion"

    compile "io.swagger:swagger-play2_$scalaPlatform:$swaggerVersion"

    // For generating Flow types
    compile "com.davegurnell:bridges_2.12:0.20.2"
}

model {
    components {
        play {
            platform play: playVersion, scala: scalaPlatform, java: '1.8'
            injectedRoutesGenerator = true

            sources {
                twirlTemplates {
                    defaultImports = TwirlImports.SCALA
                }
            }
        }
    }

    distributions {
        playBinary {
            baseName = "sustaina-services"
        }
    }
}

idea {
    module {
        sourceDirs += file("app")
        testSourceDirs += file("test")
        scopes.COMPILE = [plus: [configurations.play], minus: []]
        scopes.RUNTIME = [plus: [configurations.playRun], minus:[configurations.play]]
        scopes.TEST = [plus: [configurations.playTest], minus: [configurations.playRun]]
    }
}

configurations {
    play {
        extendsFrom compile
    }
}

// TODO: make it possible to define repositories only once in root project build.gradle
repositories {
    jcenter()
    maven {
        name "lightbend-maven-releases"
        url "https://repo.lightbend.com/lightbend/maven-release"
    }
    ivy {
        name "lightbend-ivy-release"
        url "https://repo.lightbend.com/lightbend/ivy-releases"
        layout "ivy"
    }
}